{"version":3,"sources":["webpack:///./src/pages/contact.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/favicon_1.png","webpack:///./src/components/nav.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","Contact","a","createElement","title","className","raised","padded","style","backgroundColor","marginTop","name","method","data-netlify","data-netlify-honeypot","action","type","value","placeholder","rows","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","p","Nav","render","react_default","Menu","fixed","Container","Item","as","Link","to","header","Image","size","src","Logo","marginRight","maxHeight","marginBottom","activeClassName","Component","Footer","author","email","footerStyles","footerText","footerItem","footerLink","href","position","Date","getFullYear","Layout","children","data","_856328897","Fragment","Helmet","charSet","site","siteMetadata","content","rel","components_nav","siteTitle","footer","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","property","concat","defaultProps","SegmentGroup","props","compact","horizontal","piled","stacked","classes","classnames_default","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","extends_default","lib","isNil","handledProps","propTypes","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","secondary","tertiary","textAlign","vertical","Group","Inline"],"mappings":"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","file":"component---src-pages-contact-jsx-a2ea89e7203a7d60d202.js","sourcesContent":["import React from \"react\"\nimport { Container, Segment } from \"semantic-ui-react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./contact.css\"\n\nconst Contact = () => {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" />\n      <Container>\n        <div className=\"animated fadeIn mainContent contactForm\">\n          <Segment\n            raised\n            padded\n            style={{ backgroundColor: \"#f5f5f5\", marginTop: \"50px\" }}\n          >\n            <form\n              name=\"contact\"\n              method=\"post\"\n              data-netlify=\"true\"\n              data-netlify-honeypot=\"bot-field\"\n              className=\"ui form contactForm\"\n              action=\"/index.html\"\n            >\n              <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n              <div className=\"field\">\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              </div>\n              <div className=\"field\">\n                <div className=\"field\">\n                  <label>E-mail</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"joe@schmoe.com\"\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <label>Message</label>\n                <textarea\n                  name=\"message\"\n                  placeholder=\"Tell me something interesting\"\n                  rows=\"6\"\n                />\n              </div>\n              <button className=\"ui button positive\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n          </Segment>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Contact\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon_1-27ff0dd4e6eb0c5eee85ff4ab97b5081.png\";","import React, { Component } from \"react\"\nimport { Container, Image, Menu } from \"semantic-ui-react\"\nimport { Link } from \"gatsby\"\nimport Logo from \"../images/favicon_1.png\"\nimport \"./nav.css\"\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div>\n        <Menu fixed=\"top\">\n          <Container>\n            <Menu.Item className=\"logo\" as={Link} to=\"/\" header>\n              <Image\n                size=\"mini\"\n                src={Logo}\n                style={{\n                  marginRight: \"1.5em\",\n                  maxHeight: \"25px\",\n                  marginBottom: \"0px\",\n                }}\n              />\n              <div>The Content Cycle</div>\n            </Menu.Item>\n            <Menu.Item\n              className=\"nav-item\"\n              activeClassName=\"activeNav\"\n              as={Link}\n              to=\"/about\"\n            >\n              About\n            </Menu.Item>\n            <Menu.Item\n              className=\"nav-item\"\n              activeClassName=\"activeNav\"\n              as={Link}\n              to=\"/examples\"\n            >\n              Examples\n            </Menu.Item>\n            <Menu.Item\n              className=\"nav-item\"\n              activeClassName=\"activeNav\"\n              as={Link}\n              to=\"/pricing\"\n            >\n              Pricing\n            </Menu.Item>\n            <Menu.Item\n              className=\"nav-item\"\n              activeClassName=\"activeNav\"\n              as={Link}\n              to=\"/contact\"\n            >\n              Contact\n            </Menu.Item>\n\n            {/* <Dropdown item simple text=\"Dropdown\">\n          <Dropdown.Menu>\n            <Dropdown.Item>List Item</Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Header>Header Item</Dropdown.Header>\n            <Dropdown.Item>\n              <i className=\"dropdown icon\" />\n              <span className=\"text\">Submenu</span>\n              <Dropdown.Menu>\n                <Dropdown.Item>List Item</Dropdown.Item>\n                <Dropdown.Item>List Item</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown> */}\n          </Container>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default Nav\n","import React from \"react\"\nimport { Container, Menu } from \"semantic-ui-react\"\nimport footerStyles from \"./footer.module.css\"\n\nconst Footer = ({ author, email }) => {\n  return (\n    <div>\n      <Menu fixed=\"bottom\" className={footerStyles.footerText}>\n        <Container>\n          {/* <span className={footerStyles.footerItem}>{author}</span> | */}\n          <Menu.Item>\n            <span className={footerStyles.footerItem}>\n              <strong>Mobile:</strong> +1 650-922-3825\n            </span>\n          </Menu.Item>\n\n          <Menu.Item>\n            <span className={footerStyles.footerItem}>\n              <strong> Email:</strong>{\" \"}\n              <a\n                className={footerStyles.footerLink}\n                href=\"mailto:ray@thecontentcycle.com\"\n              >\n                ray@thecontentcycle.com\n              </a>\n            </span>\n          </Menu.Item>\n\n          <Menu.Item>\n            <span className={footerStyles.footerItem}>\n              {\" \"}\n              <strong> Twitter:</strong>{\" \"}\n              <a\n                className={footerStyles.footerLink}\n                href=\"mailto: abc@example.com\"\n              >\n                @TheContentCycle\n              </a>\n            </span>\n          </Menu.Item>\n          <Menu.Item position=\"right\">\n            <span className={footerStyles.footerItem}>\n              {\" \"}\n              © {new Date().getFullYear()} | All Rights Reserved\n            </span>\n          </Menu.Item>\n        </Container>\n      </Menu>\n    </div>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport Nav from \"./nav\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{data.site.siteMetadata.title}</title>\n        <meta name=\"description\" content=\"Will's Fancy Pantsiness\" />\n        <link rel=\"canonical\" href=\"https://willrainbow.com\" />\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n        />\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Candal|Lato|Luckiest+Guy|Montserrat:400,600,900|Ranchers\"\n          rel=\"stylesheet\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.css\"\n        />\n      </Helmet>\n      <Nav siteTitle={data.site.siteMetadata.title} />\n      <div>\n        <div>{children}</div>\n\n        <Footer author={data.site.siteMetadata.author} />\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;"],"sourceRoot":""}